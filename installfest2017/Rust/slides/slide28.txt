
// metody
struct Complex {
    real: f32,
    imag: f32,
}
//
impl Complex {
    // konstruktor volany Complex::new(real, imag)
    fn new(real: f32, imag: f32) -> Complex {
        Complex { real: real, imag: imag }
    }
    // konstruktor volany Complex::zero()
    fn zero() -> Complex {
        Complex { real: 0.0, imag: 0.0 }
    }
//
    fn abs(&self) -> f32 {
        (self.real * self.real + self.imag * self.imag).sqrt()
    }
//
    fn print(&self) {
        println!("complex number: {}+{}i", self.real, self.imag);
    }
//
    fn add(&self, c:&Complex) -> Complex {
        Complex {
            real: self.real + c.real,
            imag: self.imag + c.imag,
        }
    }
}
//
fn main() {
    let c1 = Complex { real: 3.0, imag: 4.0 };
    c1.print();
    println!("absolute value: {}", c1.abs());
}
