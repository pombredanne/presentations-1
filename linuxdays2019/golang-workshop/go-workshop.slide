Programovací jazyk Go - workshop
Linux Days 2019
Tags: golang, go

Pavel Tišnovský <ptisnovs@redhat.com>
Red Hat, Inc.



* Úvodní informace o workshopu

* Gophers
#The Go gopher was designed by Renee French. (http://reneefrench.blogspot.com/)
#Source https://golang.org/doc/gopher/fiveyears.jpg
#The design and this image is licensed under the Creative Commons 3.0 Attributions license.
.image ./images/fiveyears.jpg _ 900



Cíle jazyka Go
- Jednoduchost, jednoznačnost
- Jazyk postaven na jednoduchých a známých konceptech
- Lze začít programovat po doslova několikaminutovém tutoriálu
- Bezpečné aplikace
- Mikroslužby
- Skripty a nástroje pro DevOps od DevOps
- Jazyk pro potřeby Googlu: spíše pro mladší vývojáře (C/C++, Java, Python ve škole)
- Použití pro rozsáhlejší aplikace psané velkým týmem
- Paralelní běh částí aplikace
- Rozumný výpočetní výkon: cílem je dosáhnout C/C++/Fortranu



Charakteristické rysy jazyka Go
- Poučení z chyb, které najdeme například v C/C++
- Silný typový systém
- Nepoužívají se makra založená na textové substituci
- Nepoužívají se hlavičkové soubory
- Bezpečná práce s pamětí (+ GC)
- Standardizovaný framework pro testování
- Rychlé překlady
- Syntaktické věci: ++/-- jen postfixové a nejsou to výrazy
- Nepoužívá se ukazatelová aritmetika
- Nepoužívají se šablony
- Nejsou podporovány výjimky (prozatím)



* Důležité vlastnosti Go

- Správa paměti se přenáší do runtime
- Gorutiny a kanály (600k gorutin, 90% CPU)
- Více imperativních rysů: explicitní zápis většiny operací
- Více pragmaticky zaměřený jazyk
- Prozatím nedosahuje tak vysokého výpočetního výkonu jako C
- "Don't communicate by sharing memory; share memory by communicating"



* Go fundamentals
.play sources/01_hello.go



* Go fundamentals
- Keywords
- Data types
- Control structures
- User data types
- Interfaces
- Goroutines
- Channels



* Klasický program typu "Hello world"
.play sources/hello.go
.code sources/run_hello.go
.code sources/build_hello.go



* Balíčky
- každý zdrovový kód začíná deklarací `package`
- speciální balíček `main`
- main: main() pro spustitelné aplikace
- workspace je definováno v proměnné `$GOPATH`
- základní struktura: `src`, `bin`



* Funkce
.play sources/functions.go



* Více návratových hodnot
.play sources/functions2.go



* Pojmenované návratové hodnoty
.play sources/functions3.go



* Konstanty
.play sources/const.go



* Proměnné
.play sources/vars.go



* Typová konverze
- nikdy neprobíhá automaticky
.play sources/casts.go

